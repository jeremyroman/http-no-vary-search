{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-08-06T00:30:16.800314+00:00",
  "repo": "jeremyroman/http-no-vary-search",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 4,
      "id": "I_kwDOLx27pM6R4L5l",
      "title": "Double-quoting",
      "url": "https://github.com/jeremyroman/http-no-vary-search/issues/4",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The draft includes this text in an example:\r\n\r\n>  \u00ab \"\u00e9 \u6c17\" \u00bb\r\n\r\nThat's two layers of quoting.  One layer is probably enough.",
      "createdAt": "2024-08-05T01:40:06Z",
      "updatedAt": "2024-08-05T01:40:06Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 5,
      "id": "I_kwDOLx27pM6R4MI6",
      "title": "Add an introduction",
      "url": "https://github.com/jeremyroman/http-no-vary-search/issues/5",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The draft doesn't bother with any of the usual frippery that is in other similar documents, like establishing what the problem is, why it is important to solve, and providing an overview of the solution.  That's going to be challenging.",
      "createdAt": "2024-08-05T01:41:18Z",
      "updatedAt": "2024-08-05T01:41:18Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 6,
      "id": "I_kwDOLx27pM6R4M12",
      "title": "Extensibility, not",
      "url": "https://github.com/jeremyroman/http-no-vary-search/issues/6",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> The dictionary must only contain entries whose keys are one of key-order, params, except.\r\n\r\nIf this is a MUST (is it?) then this will make it impossible to extend the field semantics.  An analysis of why this is acceptable is probably wise.\r\n\r\nNote: I don't think that you need to establish an IANA registry for keys or anything like that.  This is a self-contained proposal that doesn't _need_ extensibility to function.  However, it would be good to establish clear rules for what an implementation does when an extension is present.  Right now, it seems to be that it completely disables the special logic that this draft introduces.  That seems wrong to me.  It would be more robust to ignore keys that are not supported.",
      "createdAt": "2024-08-05T01:44:51Z",
      "updatedAt": "2024-08-05T01:44:51Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 7,
      "id": "I_kwDOLx27pM6R4Odc",
      "title": "Is the default equivalent to an empty field?",
      "url": "https://github.com/jeremyroman/http-no-vary-search/issues/7",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The definition for the default says:\r\n\r\n>  The default URL search variance is a URL search variance whose no-vary params is an empty list, vary params is wildcard, and vary on key order is true.\r\n\r\nThis is something that can be explicitly specified.  Indeed, the processing returns the default if the field is specified but empty.\r\n\r\nBut specifying the field indicates an understanding of the advanced matching algorithm, which might imply that the caller wishes to engage the algorithm.  That would mean that `https://example.com/?q&&&&` is equivalent to `https://example.com/?q&&`, where it wouldn't be otherwise.\r\n\r\nIs it useful to distinguish an expression that engages the algorithm vs. one that does not?  Yes, the answer could be \"we fall back to default processing, which is safe\", but it seems like that's a logic error and somewhat surprising.",
      "createdAt": "2024-08-05T01:52:33Z",
      "updatedAt": "2024-08-05T01:52:33Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOLx27pM5toAxh",
      "title": "Reformat text from the WICG draft and as kramdown-rfc compatible markdown",
      "url": "https://github.com/jeremyroman/http-no-vary-search/pull/1",
      "state": "MERGED",
      "author": "jeremyroman",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "The text is mostly preserved verbatim, though since auto-linking in kramdown-rfc is much more limited, not all references (especially to WHATWG Infra) are linked. The term \"list\" is replaced with \"array\" (as in RFC 8941) only in contexts where it is applied directly to the result of RFC 8941, which uses the term \"list\" to refer to a specific kind of structured field value which is not meant here (and it may be confusing which is meant, even with the remarks about WHATWG notation and conventions).\r\n\r\nSome formatting is also lost due to the constraints of the Markdown -> HTML -> RFC XML -> {HTML, TXT} pipeline used for modern Internet-Draft processing.\r\n\r\nNo additional text is yet added, e.g., related to integration with RFC 9111 (HTTP-CACHING) or IANA registration.",
      "createdAt": "2024-04-24T16:29:08Z",
      "updatedAt": "2024-04-24T16:30:49Z",
      "baseRepository": "jeremyroman/http-no-vary-search",
      "baseRefName": "main",
      "baseRefOid": "5b451abf747f14d725eac7f15d36778ff833a638",
      "headRepository": "jeremyroman/http-no-vary-search",
      "headRefName": "import-wicg",
      "headRefOid": "e957c0bc5a34bfc9ae54d0936b23e61a958495ff",
      "closedAt": "2024-04-24T16:30:48Z",
      "mergedAt": "2024-04-24T16:30:48Z",
      "mergedBy": "jeremyroman",
      "mergeCommit": {
        "oid": "b727efd65c6ad29528369511724f0849dd31d51d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOLx27pM5tvJW7",
      "title": "Correct an example",
      "url": "https://github.com/jeremyroman/http-no-vary-search/pull/2",
      "state": "MERGED",
      "author": "jeremyroman",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This example did not get copied correctly the first time.",
      "createdAt": "2024-04-25T14:46:15Z",
      "updatedAt": "2024-04-25T14:46:37Z",
      "baseRepository": "jeremyroman/http-no-vary-search",
      "baseRefName": "main",
      "baseRefOid": "b727efd65c6ad29528369511724f0849dd31d51d",
      "headRepository": "jeremyroman/http-no-vary-search",
      "headRefName": "correct-example",
      "headRefOid": "61e21296da4cf04c7f7f08ec5d4e2c03ae99e009",
      "closedAt": "2024-04-25T14:46:34Z",
      "mergedAt": "2024-04-25T14:46:34Z",
      "mergedBy": "jeremyroman",
      "mergeCommit": {
        "oid": "ba6601abb198c0bcd758a9386d148c9fa09c0e7d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOLx27pM5xdp2q",
      "title": "Replicate updated security & privacy considerations to IETF draft.",
      "url": "https://github.com/jeremyroman/http-no-vary-search/pull/3",
      "state": "MERGED",
      "author": "jeremyroman",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This was updated in the upstream WICG document: https://github.com/WICG/nav-speculation/commit/29cfa18ac33d299ee93032e0cd2be085e9608257",
      "createdAt": "2024-06-04T19:13:37Z",
      "updatedAt": "2024-06-04T19:13:58Z",
      "baseRepository": "jeremyroman/http-no-vary-search",
      "baseRefName": "main",
      "baseRefOid": "ba6601abb198c0bcd758a9386d148c9fa09c0e7d",
      "headRepository": "jeremyroman/http-no-vary-search",
      "headRefName": "replicate-sec-priv",
      "headRefOid": "fec10a16ba2b10324ab4e7fa1e971ae8122d3a84",
      "closedAt": "2024-06-04T19:13:53Z",
      "mergedAt": "2024-06-04T19:13:53Z",
      "mergedBy": "jeremyroman",
      "mergeCommit": {
        "oid": "d6c5beac723e9416ca3c7fdd1313b668d3d1bf01"
      },
      "comments": [],
      "reviews": []
    }
  ]
}